#!/usr/bin/env python2
#############################
# copyright 2015-2017 aerth #
# MIT license               #
#############################


from os import system
import curses, sys, traceback, os, time

# switch case type functionality
class switch(object):
    value = None
    def __new__(class_, value):
        class_.value = value
        return True

def case(*args):
    return any((arg == switch.value for arg in args))
def main():


    try:
        # top bar
        def winheader():
            curses.curs_set(0)
            screen.border(0)
            screen.addstr(1,2, "SERVIT", curses.A_STANDOUT)
            screen.addstr(2,2, "New and Improved", curses.A_BOLD)
            screen.addstr(4, 2, "1 - Install Dependencies")
            screen.addstr(2, 50, "Press q or CTRL + C to Exit")
            screen.refresh()
            

        # user text entry
        def get_param(prompt_string):
            screen.clear()
            winheader()
            screen.addstr(2, 2, prompt_string)
            screen.refresh()
            input = screen.getstr(10, 10, 600)
            return input

        # 
        def get_params(prompt_string,second_string):
            screen.clear()
            screen.border(0)
            screen.addstr(2, 10, prompt_string)
            screen.addstr(4, 10, second_string)
            screen.refresh()
            input = screen.getstr(10, 10, 60)
            return input
        
        
        def execute_cmd(cmd_string):
             screen.clear()
             curses.nocbreak(); screen.keypad(0); curses.echo()
             curses.endwin()
             cmd_exit_code = system( cmd_string )
             if cmd_exit_code == 0:
                  print "Command executed correctly"
             else:
                  print "Command terminated with error"
            
             raw_input("Press enter")
             screen.refresh()

##############################
# DEFINE MENU FUNCTIONS HERE #
####################################################
#
        def dummyfunc1():
             execute_cmd("whoami")
        def dummyfunc2():
             execute_cmd("ps -x")
        funcmap = {"1" : dummyfunc1, "2" : dummyfunc2}
#
####################################################


        x = 0
        msg = ""
        while x != ord('q'):
            screen = curses.initscr() 
            curses.start_color()
            curses.cbreak(); screen.keypad(1); curses.noecho()
            screen.clear()
            screen.border(0)
            winheader()
            if msg != "":
                 screen.addstr(1,10, msg) 
            msg = ""
            screen.refresh()
            x = screen.getch()
            msg = "key: %c %s" % (long(x), long(x))
            key = "%c" % (x)
            if funcmap.has_key(key):
                funcmap[key]()
            else:
                msg = "undefined: %c %d" % (x, x)
            screen.refresh()
        curses.nocbreak(); screen.keypad(0); curses.echo()
        curses.endwin()
    except KeyboardInterrupt:
        curses.nocbreak(); screen.keypad(0); curses.echo()
        curses.endwin()
        print "\n Have a Grateful Day! :D \n"
        quit()
    except Exception:
        curses.nocbreak(); screen.keypad(0); curses.echo()
        curses.endwin()
        traceback.print_exc(file=sys.stdout)
        quit()

if __name__ == "__main__":
    main()

